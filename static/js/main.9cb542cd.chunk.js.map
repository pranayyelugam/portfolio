{"version":3,"sources":["Components/Content.jsx","Components/Header.jsx","Components/Footer.jsx","Components/MapPage.jsx","Components/Books.jsx","Components/MapUser.jsx","Components/Publications.jsx","Components/Projects.jsx","Components/Blog.jsx","App.js","serviceWorker.js","index.js","Images/acadia_1.jpg","resume_22.pdf","fonts/GreatVibes-Regular.ttf"],"names":["Content","props","state","isMobile","isSmallMobile","this","setState","window","innerWidth","className","src","img","style","borderRadius","lineHeight","href","Component","Header","CustomLink","to","label","match","useRouteMatch","path","exact","menuItemClass","classNames","menuActiveItemClass","Footer","marginRight","size","resume","INDIA_TOPO_JSON","require","SaveButton","history","useHistory","onClick","event","preventDefault","array","keyField","cityObject","cityList","reduce","obj","item","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","push","insertedIds","localStorage","setItem","type","MapComponent","Viewer","textInput","React","createRef","city","userId","handleChange","bind","handleSubmit","displayTooltip","saveButton","clearState","fitToViewer","hydrateStateWithLocalStorage","target","value","clear","pop","capitalizeFirstLetter","population","string","charAt","toUpperCase","slice","x","toString","replace","cityURL","undefined","response","ok","Error","statusText","list","catch","error","current","classList","add","setTimeout","remove","key","hasOwnProperty","getItem","parse","e","inputString","trim","cityItem","split","find","c","length","getCity","fontSize","onSubmit","width","padding","margin","display","border","boxSizing","ref","placeholder","onChange","marginTop","height","customMiniature","detectAutoPan","scaleFactorMax","scaleFactorMin","background","data-tip","projection","projectionConfig","scale","center","geography","geographies","map","geo","rsmKey","fill","stroke","default","outline","hover","pressed","lat","long","code","i","coordinates","onMouseEnter","setTooltipContent","numberWithCommas","onMouseLeave","r","calculateCirlceRadius","strokeWidth","MapPageComponent","useState","content","setContent","BooksComponenet","class","MapUser","fetchData","id","arrOfObj","Object","entries","params","MapUserDataComponent","Map","cities","citiesData","CitiesInfoPortion","isNotEmpty","popArray","parseInt","accPopulation","a","b","marginBottom","fontWeight","withRouter","PublicationComponent","publication","index","link","title","authors","conference","ProjectsComponent","textDecoration","BlogComponent","App","MapPage","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.9cb542cd.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Card from 'card-vibes'\nimport img from '../Images/acadia_1.jpg'\nimport '../css/Content.scss'\n\nexport default class Content extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { isMobile: false, isSmallMobile: false };\n    }\n\n    componentDidMount() {\n        this.setState({ isMobile: window.innerWidth < 480, isSmallMobile: window.innerWidth < 321 });\n    }\n    render() {\n        const { isMobile, isSmallMobile } = this.state;\n        return (\n            <div className=\"content\">\n                <div className=\"content-left\">\n                 \n                        <div className=\"dp\">\n                            <img src={img} style={{ borderRadius: '5%' }}></img>\n                        </div>\n                   \n                   \n                    <h1 className=\"stylish-name\">Pranay Yelugam</h1>\n                    <h4 className=\"stylish-name\">MTS @ Eightfold.ai</h4>\n                    <h4 className=\"stylish-name\">Graduate Student @ CICS</h4>\n                    <h4 className=\"stylish-name\">University of Massachusetts Amherst</h4>\n                </div>\n                <div className=\"content-right\">\n                   \n                 \n                    <p style={{\n                        lineHeight:\"1.5rem\"\n                    }}>\n                        I'm currently working as a Member of Technical Staff (MTS) at <a href='https://eightfold.ai'>Eightfold.ai</a>. I received my\n                        B.S. from Indian Institute of Information Technology Allahabad, and completed M.S. from the College of Information & Computer Sciences at the University of Massachusetts Amherst,\n                        during which I spent some time at <a href=\"http://www.iesl.cs.umass.edu/\">IESL</a> working with <a href=\"https://people.cs.umass.edu/~mccallum/\">Andrew McCallum.</a>\n                        <br></br> <br></br>\n                        \n                        <b>Research Interests:</b> I'm more inclined towards research at the intersection of natural language processing, question answering, commonsense question answering, knowledge representation, and machine learning in general. \n                        My current research interests include combining external knowledge sources with Langugage Models for generative question answering. \n                        \n                        <br></br> <br></br>\n                        <b>Experience:</b> Most recently, I worked on designing a probabilistic evaluation method for open-ended commonsense question answering tasks.\n                        Previously, I worked on analysing the discourse structure in scientific peer review and how this study impacts the transparency in the\n                        scientific peer review system. I helped in annotating a dataset and creating models that would give more insights into peer review system through the lens\n                        of discourse at the document level. \n                        \n                    </p>\n                   \n                </div>\n            </div>\n\n        );\n    }\n\n}\n","import React, { Component } from 'react';\nimport classNames from 'classnames'\nimport {\n    Link,\n    useRouteMatch\n} from \"react-router-dom\";\nimport '../css/Header.scss'\n\nexport default class Header extends Component {\n\n    render() {\n        return (\n            <div className=\"header-row\">\n                <div className=\"empty-space\"></div>\n                <ul className=\"nav-bar\">\n                    <CustomLink to=\"/portfolio\" label=\"Home\" />\n                    <CustomLink to=\"/portfolio/publications\" label=\"Publications\" />\n                    <CustomLink to=\"/portfolio/projects\" label=\"Projects\" />\n                    <CustomLink to=\"/portfolio/blog\" label=\"Blog\" />\n                   \n\n                </ul>\n            </div>\n\n        )\n    }\n}\n\nfunction CustomLink({ to, label }) {\n    let match = useRouteMatch({\n        path: to,\n        exact: true\n    })\n\n    let menuItemClass = classNames('nav-mem')\n    let menuActiveItemClass = classNames('active-menu-item')\n\n    return (\n        <Link className={match ? menuActiveItemClass : menuItemClass} to={to}>{label}</Link>\n    )\n}","import React, { Component } from 'react';\nimport { SocialIcon } from 'react-social-icons';\nimport { AiOutlineFilePdf, AiFillGithub } from 'react-icons/ai';\nimport { FiTwitter } from 'react-icons/fi';\nimport { GrMail } from 'react-icons/gr';\nimport { SiGooglescholar } from 'react-icons/si';\n\nimport resume from '../resume_22.pdf'\n\n\nimport '../css/Footer.scss'\n\nexport default class Footer extends Component {\n    render() {\n        return (\n            <div className=\"content-bottom\">\n                <div style={{ marginRight: '1rem'  }}>\n                    <a href=\"https://github.com/pranayyelugam\"><AiFillGithub size=\"25px\" /></a>\n                </div>\n                <div style={{ marginRight: '1rem' }}>\n                    <a href=\"https://twitter.com/pranaykumar1096\"><FiTwitter size=\"25px\" /></a>\n                </div>\n                <div style={{ marginRight: '1rem' }}>\n                    <a href=\"mailto:ypranayraj@gmail.com\"><GrMail size=\"25px\" /></a>\n                </div>\n                <div style={{ marginRight: '1rem' }}>\n                    <a href={resume}><AiOutlineFilePdf size=\"25px\" /></a>\n                </div>\n                <div style={{ marginRight: '1rem' }}>\n                    <a href=\"https://scholar.google.com/citations?user=i4JN7mwAAAAJ&hl=en\"><SiGooglescholar size=\"25px\" /></a>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n","import React, { memo, useState } from 'react'\nimport {\n    ComposableMap,\n    Geographies,\n    Geography,\n    Marker\n} from \"react-simple-maps\";\nimport '../css/Blogs.scss'\nimport { UncontrolledReactSVGPanZoom } from 'react-svg-pan-zoom'\nimport ReactTooltip from \"react-tooltip\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst INDIA_TOPO_JSON = require('../topo.json');\n\n\nfunction MapPageComponent() {\n    const [content, setContent] = useState(\"\");\n\n    return (\n        <div>\n            <MapComponent setTooltipContent={setContent} />\n            <ReactTooltip>{content}</ReactTooltip>\n        </div>\n    )\n}\n\nfunction SaveButton(props) {\n    const history = useHistory();\n\n    const datasave = (event) => {\n        event.preventDefault();\n        let cityURL = 'https://indiacities.herokuapp.com/cities'\n        const arrayToObject = (array, keyField) =>\n            array.reduce((obj, item) => {\n                obj[item[keyField]] = item\n                return obj\n            }, {})\n        const cityObject = arrayToObject(props.cityList, \"_id\")\n        fetch(cityURL, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(cityObject)\n        }).then(res => res.json())\n            .then(data => {\n                console.log(data)\n                // this.props.onSelectLanguage(data.insertedIds[0]);\n                history.push(\"/portfolio/maps/\" + data.insertedIds[0]);\n                localStorage.setItem(\"userData\", JSON.stringify(data));\n            });\n\n    }\n    return (\n        <button onClick={datasave} type=\"button\" className=\"boxleft1\">Finish & Share</button>\n    )\n}\n\nclass MapComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.textInput = React.createRef();\n        this.state = {\n            city: '',\n            data: [],\n            userId: ''\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.displayTooltip = this.displayTooltip.bind(this);\n        this.saveButton = this.saveButton.bind(this);\n        this.clearState = this.clearState.bind(this)\n    }\n\n    Viewer = null\n\n    componentDidMount() {\n        this.Viewer.fitToViewer();\n        this.hydrateStateWithLocalStorage()\n    }\n\n    handleChange(event) {\n        this.setState({\n            city: event.target.value\n        })\n    }\n\n    clearState(event) {\n        this.setState({\n            city: '',\n            data: []\n        })\n        localStorage.clear()\n    }\n\n    displayTooltip(city, state, pop) {\n        let ret = this.capitalizeFirstLetter(city) + \",\" + state + \"(\" + pop + \")\"\n        return ret\n    }\n\n    calculateCirlceRadius(population) {\n        let cirlceRadius = 1;\n        if (population > 9478447) {\n            cirlceRadius = 14;\n        }\n        else if (population > 5486973) {\n            cirlceRadius = 10;\n        }\n        else if (population > 1240000) {\n            cirlceRadius = 7;\n        }\n        else {\n            cirlceRadius = 5;\n        }\n        return cirlceRadius\n    }\n\n    capitalizeFirstLetter(string) {\n        if (string) {\n            return string.charAt(0).toUpperCase() + string.slice(1);\n        }\n\n    }\n\n    numberWithCommas(x) {\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    }\n\n    getCity(city, state) {\n        let cityURL = 'https://indiacities.herokuapp.com/search?city='\n        if (state === undefined) {\n            cityURL += city\n        } else {\n            cityURL += city + '&state=' + state\n        }\n        return fetch(cityURL).then(function (response) {\n            if (!response.ok) {\n                throw Error(response.statusText);\n            }\n            return response;\n        })\n            .then(response => response.json())\n            .then(res => {\n                console.log(res)\n                const list = [...this.state.data]\n                list.push(res[0])\n                this.setState({\n                    data: [...this.state.data, res[0]],\n                    city: ''\n                })\n                localStorage.setItem(\"data\", JSON.stringify(list))\n            }).catch(error => {\n                console.log(error)\n                this.setState({\n                    city: ''\n                })\n                this.textInput.current.classList.add('error')\n                setTimeout(() => {\n                    this.textInput.current.classList.remove('error')\n                }, 300);\n            });\n    }\n\n    hydrateStateWithLocalStorage() {\n        // for all items in state\n        for (let key in this.state) {\n            // if the key exists in localStorage\n            if (localStorage.hasOwnProperty(key)) {\n                // get the key's value from localStorage\n                let value = localStorage.getItem(key);\n\n                // parse the localStorage string and setState\n                try {\n                    value = JSON.parse(value);\n                    this.setState({ [key]: value });\n                } catch (e) {\n                    // handle empty string\n                    this.setState({ [key]: value });\n                }\n            }\n        }\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        let inputString = this.state.city\n        inputString = inputString.trim()\n        let cityItem = inputString.split(',')\n        let city = cityItem[0].trim()\n        let state = undefined\n        let checkIfCityAlreadyExists = await this.state.data.find(c => c.city === city)\n        if (checkIfCityAlreadyExists) {\n            this.setState({\n                city: ''\n            })\n            this.textInput.current.classList.add('error')\n            setTimeout(() => {\n                this.textInput.current.classList.remove('error')\n            }, 300);\n            return\n        }\n        if (cityItem.length === 2) {\n            state = cityItem[1].trim()\n        }\n\n        let c = await this.getCity(city, state)\n\n        console.log(c)\n    }\n\n\n\n    saveButton(event) {\n        event.preventDefault();\n        let cityURL = 'https://indiacities.herokuapp.com/cities'\n        const arrayToObject = (array, keyField) =>\n            array.reduce((obj, item) => {\n                obj[item[keyField]] = item\n                return obj\n            }, {})\n        const cityObject = arrayToObject(this.state.data, \"_id\")\n        fetch(cityURL, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(cityObject)\n        }).then(res => res.json())\n            .then(data => {\n                this.setState({ userId: data.insertedIds[0] });\n\n                this.props.history.push(data.insertedIds[0] + \"/maps\");\n                localStorage.setItem(\"data\", JSON.stringify(data));\n                console.log(JSON.stringify(data));\n            });\n    }\n\n    render() {\n        return (\n            <div className=\"box\">\n                <div className=\"box-left\">\n                    <p style={{\n                        fontSize: \"32px\"\n                    }}>How many Indian cities can you name?</p>\n                    <form onSubmit={this.handleSubmit}>\n                        <label>\n                            <input type=\"text\" style={{\n                                width: \"100%\",\n                                padding: \"12px 20px\",\n                                margin: \"8px 0\",\n                                display: \"inline - block\",\n                                border: \"1px solid #ccc\",\n                                borderRadius: \"4px\",\n                                boxSizing: \"border-box\"\n                            }} value={this.state.city}\n                                ref={this.textInput}\n                                placeholder=\"'Chennai' or type 'Chennai, TN'\"\n                                onChange={this.handleChange} />\n                        </label>\n                    </form>\n\n                    <div className=\"buttons\">\n                        <SaveButton cityList={this.state.data} />\n                        <button onClick={this.clearState} className=\"boxleft2\">Clear</button>\n                    </div>\n                    <div style={{\n                        marginTop: \"10rem\",\n                        fontSize: \"0.7rem\"\n                    }}>\n        \n                        Click Enter to see the city name appear on the map.<br></br>\n                        Click Finish & Share to get your results on a sharable link.\n                    </div>\n                  \n                </div>\n\n                <div className=\"box-right\">\n                    <UncontrolledReactSVGPanZoom\n                        width={800}\n                        height={550}\n                        ref={(Viewer) => (this.Viewer = Viewer)}\n                        customMiniature={customMiniature}\n                        detectAutoPan={false}\n                        scaleFactorMax={5}\n                        scaleFactorMin={1}\n                        //tool=\"pan\"\n                        background=\"#6c757d10\"\n                    >\n                        <div width={800}\n                            height={550}>\n                            <ComposableMap\n                                data-tip=\"\"\n                                projection=\"geoMercator\"\n                                projectionConfig={{\n                                    scale: 950,\n                                    center: [78.9629, 22.5937]\n                                }}\n                                width={800}\n                                height={550}\n                            >\n                                <Geographies geography={INDIA_TOPO_JSON}>\n                                    {({ geographies }) =>\n                                        geographies\n                                            .map(geo => (\n                                                <Geography\n                                                    key={geo.rsmKey}\n                                                    geography={geo}\n                                                    fill=\"#D5DED9\"\n                                                    stroke=\"#ffffff\"\n                                                    style={{\n                                                        default: { outline: \"none\" },\n                                                        hover: { outline: \"none\" },\n                                                        pressed: { outline: \"none\" },\n                                                    }}\n                                                />\n                                            ))\n                                    }\n                                </Geographies>\n\n                                {this.state.data.map(({ city, lat, long, code, population, i }) => (\n                                    <Marker\n                                        key={this.capitalizeFirstLetter(city)}\n                                        coordinates={[long, lat]}\n                                        onMouseEnter={() => {\n\n                                            this.props.setTooltipContent(`${this.capitalizeFirstLetter(city)}, ${code} (${this.numberWithCommas(population)})`);\n                                        }}\n                                        onMouseLeave={() => {\n                                            this.props.setTooltipContent(\"\");\n                                        }}\n                                    >\n                                        <circle r={this.calculateCirlceRadius(population)} fill=\"#D95B43\" stroke=\"#fff\" strokeWidth={0.5} />\n                                    </Marker>\n\n                                ))}\n                            </ComposableMap>\n                        </div>\n                    </UncontrolledReactSVGPanZoom>\n                </div>\n\n            </div >\n\n        )\n    }\n}\n\n\n\nconst customMiniature = () => {\n    return (\n        <div></div>\n    )\n}\n\n\n\n\n\nexport default (MapPageComponent)\n","import React, { Component } from 'react';\nimport '../css/books.scss'\nexport default class BooksComponenet extends Component {\n    render() {\n        return (\n            <div class=\"books-container\">\n                <h1 className=\"stylish-name\">Some of the books I loved reading: </h1>\n                <ui>\n                    <li>To Kill a Mockingbird</li>\n                    <li>Flowers for Algernon</li>\n                    <li>The Book Thief</li>\n                    <li>Permanent Record</li>\n                    <li>The Godfather</li>\n                    <li>The Last Juror</li>\n                    <li>Ikigai: The Japanese Secret to a Long and Happy Life</li>\n                </ui>\n\n            </div>\n        )\n    }\n}","import React, { memo, useState } from 'react'\nimport { withRouter } from \"react-router\";\nimport {\n    ComposableMap,\n    Geographies,\n    Geography,\n    Marker\n} from \"react-simple-maps\";\nimport { UncontrolledReactSVGPanZoom } from 'react-svg-pan-zoom'\nimport ReactTooltip from \"react-tooltip\";\nimport '../css/MapUser.scss'\n\n\nconst styles = {\n    fontFamily: \"sans-serif\",\n    textAlign: \"center\"\n};\n\nconst INDIA_TOPO_JSON = require('../topo.json');\n\nclass MapUser extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: []\n        };\n    }\n    componentDidMount() {\n        const id = this.props.match.params.id;\n        this.fetchData(id)\n    }\n\n    fetchData = (id) => {\n        let url = 'https://indiacities.herokuapp.com/user?userId=' + id\n        return fetch(url).then(function (response) {\n            if (!response.ok) {\n                throw Error(response.statusText);\n            }\n            return response;\n        })\n            .then(response => response.json())\n            .then(res => {\n                let arrOfObj = Object.entries(res[0]).map(e => e[1])\n                this.setState({\n                    data: arrOfObj.slice(1)\n                })\n            }).catch(error => {\n                console.log(error)\n\n            });\n    }\n    render() {\n        return <div>{this.state.data.length > 0 ? <MapUserDataComponent data={this.state.data} /> : <div></div>}</div>;\n    }\n}\n\nfunction MapUserDataComponent(data) {\n    const [content, setContent] = useState(\"\");\n\n    return (\n        <div>\n            <Map setTooltipContent={setContent} data={data} />\n            <ReactTooltip>{content}</ReactTooltip>\n        </div>\n    )\n}\n\nclass Map extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    Viewer = null\n\n    componentDidMount() {\n        this.Viewer.fitToViewer();\n    }\n\n\n    displayTooltip(city, state, pop) {\n        let ret = capitalizeFirstLetter(city) + \",\" + state + \"(\" + pop + \")\"\n        return ret\n    }\n\n    calculateCirlceRadius(population) {\n        let cirlceRadius = 1;\n        if (population > 9478447) {\n            cirlceRadius = 14;\n        }\n        else if (population > 5486973) {\n            cirlceRadius = 10;\n        }\n        else if (population > 1240000) {\n            cirlceRadius = 7;\n        }\n        else {\n            cirlceRadius = 5;\n        }\n        return cirlceRadius\n    }\n\n    render() {\n        let cities = this.props.data.data\n        return (\n            <div className=\"user-box\">\n                <UncontrolledReactSVGPanZoom\n                    width={800}\n                    height={550}\n                    ref={(Viewer) => (this.Viewer = Viewer)}\n                    customMiniature={customMiniature}\n                    detectAutoPan={false}\n                    scaleFactorMax={5}\n                    scaleFactorMin={1}\n                    //tool=\"pan\"\n                    background=\"#6c757d10\"\n                >\n                    <div width={800}\n                        height={550}>\n                        <ComposableMap\n                            data-tip=\"\"\n                            projection=\"geoMercator\"\n                            projectionConfig={{\n                                scale: 900,\n                                center: [78.9629, 22.5937]\n                            }}\n                            width={800}\n                            height={550}\n                        >\n                            <Geographies geography={INDIA_TOPO_JSON}>\n                                {({ geographies }) =>\n                                    geographies\n                                        .map(geo => (\n                                            <Geography\n                                                key={geo.rsmKey}\n                                                geography={geo}\n                                                fill=\"#D5DED9\"\n                                                stroke=\"#ffffff\"\n                                                style={{\n                                                    default: { outline: \"none\" },\n                                                    hover: { outline: \"none\" },\n                                                    pressed: { outline: \"none\" },\n                                                }}\n                                            />\n                                        ))\n                                }\n                            </Geographies>\n\n                            {cities.map(({ city, lat, long, code, population, i }) => (\n                                <Marker\n                                    key={capitalizeFirstLetter(city)}\n                                    coordinates={[long, lat]}\n                                    onMouseEnter={() => {\n\n                                        this.props.setTooltipContent(`${capitalizeFirstLetter(city)}, ${code} (${numberWithCommas(population)})`);\n                                    }}\n                                    onMouseLeave={() => {\n                                        this.props.setTooltipContent(\"\");\n                                    }}\n                                >\n                                    <circle r={this.calculateCirlceRadius(population)} fill=\"#D95B43\" stroke=\"#fff\" strokeWidth={0.5} />\n                                </Marker>\n\n                            ))}\n                        </ComposableMap>\n                    </div>\n                </UncontrolledReactSVGPanZoom>\n                {cities.length > 0 ? <CitiesInfoPortion citiesData={cities} /> : <div></div>}\n            </div>\n        )\n    }\n}\nconst customMiniature = () => {\n    return (\n        <div></div>\n    )\n}\n\nconst customToolbar = () => {\n    return (\n        <div></div>\n    )\n}\n\nfunction numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nfunction capitalizeFirstLetter(string) {\n    if (string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n}\n\n\nconst CitiesInfoPortion = (props) => {\n    const { citiesData, ...other } = props\n    const isNotEmpty = citiesData.length > 0 ? true : false\n    let popArray = isNotEmpty ? citiesData.map(c => parseInt(c.population)) : []\n    let accPopulation = isNotEmpty ? popArray.reduce(function (a, b) {\n        return a + b;\n    }, 0) : 0\n    return (\n        <div style={{\n            marginBottom: \"2rem\"\n        }}>\n            <p style={{\n                fontSize: \"24px\",\n                fontWeight: 5\n            }}>You named {citiesData.length} cities with a total population of {numberWithCommas(accPopulation)}  in 2011. </p>\n            <h2>Cities:</h2>\n            <p style={{\n                fontSize: \"20px\",\n                fontWeight: 5\n            }}>{isNotEmpty ? citiesData.map(c =>\n                <div>\n                    {capitalizeFirstLetter(c.city)}, {c.code} ({numberWithCommas(c.population)})\n                    < br />\n                </div>\n            ) : <div></div>}</p>\n        </div>\n    )\n}\n\n\nexport default withRouter(MapUser);\n","import React, { Component } from 'react';\nimport '../css/Publications.scss'\nexport default class PublicationComponent extends Component {\n    render() {\n        const publications = [\n            {\n                'title': 'DISAPERE: A Dataset for Discourse Structure in Peer Review Discussions',\n                'link': 'https://arxiv.org/abs/2110.08520',\n                'authors': \"Neha Nayak Kennard, Tim O'Gorman, Rajarshi Das, Akshay Sharma, Chhandak Bagchi, Matthew Clinton, Pranay Kumar Yelugam, Hamed Zamani, Andrew McCallum\",\n                'conference': '2022 Annual Conference of the North American Chapter of the Association for Computational Linguistics (NAACL 2022) Hybrid. July, 2022.'\n            },\n            {\n                'title': 'Real Time Mining of Ego Networks for Exploring Social Associations',\n                'link': 'https://ieeexplore.ieee.org/document/8340594',\n                'authors': 'A Bharadwaju, Yelugam Pranay Kumar, K Anudeep, AV Krishna, BR Prasad, S Agarwal',\n                'conference': '2017 3rd International Conference on Computational Intelligence & Communication Technology (CICT 2017) February, 2017'\n            }\n        ]\n        return (\n            <div class=\"publications\">\n                <ul>\n                    {publications.map((publication, index) => {\n                        return (\n                            <li key={index}>\n                                <a href={publication.link}> {publication.title}</a><br></br>\n                                <p>{publication.authors}</p>\n                                <p><i>{publication.conference}</i></p>\n                                \n                            </li>\n                        )\n                    })}\n                </ul>\n\n               \n\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport '../css/Projects.scss'\nimport {\n    Link\n} from \"react-router-dom\";\nimport { ALIGN_LEFT } from 'react-svg-pan-zoom';\nexport default class ProjectsComponent extends Component {\n    render() {\n        return (\n            <div class=\"projects\">\n                <div class=\"projects-container\">\n\n\n                    <div class=\"project-left\">\n\n                        <div class=\"project-block\">\n                            <a href=\"https://github.com/pranayyelugam/Online-book-store\" style={{\n                                textDecoration: \"None\"\n                            }}>\n                                <h3>  Online Book Store </h3>\n                        </a>\n                            <p>A distributed online book store built using multi-tier web design and microservices. </p>\n                            <p>Implemented a loadbalancer to sent requests to different microservice replicas using round robin and least used protocols.</p>\n                            <p>Each service has multiple replicas and consistency is maintained between the replicas using primary-backup consistency protocol.  </p>\n                            <p>The microservices are fault-tolerant and can continue to function even if a replica is down.</p>\n                            <p>The microservices are dockerized and deployed to AWS.</p>\n                        </div>\n                        <div class=\"project-block\">\n                            <Link to=\"/portfolio/projects/how_many_indian_cities_can_you_name\" style={{\n                                textDecoration: \"none\"\n                            }}>  <h3> How many Indian cities can you name?</h3></Link>\n                            <p>A fun web app to test your knowledge about the cities of India.</p>\n                            <p>Built using react-simple-maps in ReactJs.</p>\n                            <p>The backend is built using Flask and is hosted on Heroku.</p>\n                        </div>\n\n                    </div>\n                    \n                        \n                </div>\n            </div>\n                           \n            \n        )\n    }\n}","import React, { Component } from 'react';\nimport '../css/Blogs.scss'\nexport default class BlogComponent extends Component {\n    render() {\n        return (\n            <div class=\"books-container\">\n                <h1 className=\"stylish-name\">Coming soon</h1>\n               \n\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.scss';\nimport Content from './Components/Content';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport MapPageComponent from './Components/MapPage';\nimport BooksComponent from './Components/Books';\nimport MapUser from './Components/MapUser'\nimport PublicationComponenet from './Components/Publications'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport ProjectsComponent from './Components/Projects';\nimport BlogComponent from './Components/Blog';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <div className=\"dynamic-area\">\n          <div className=\"site-content\">\n            <Switch>\n              <Route path=\"/portfolio/maps/:id\" >\n                <MapUser />\n              </Route>\n              <Route exact path=\"/portfolio/projects/how_many_indian_cities_can_you_name\">\n                <MapPageComponent />\n              </Route>\n              <Route exact path=\"/portfolio/projects\">\n                <ProjectsComponent />\n              </Route>\n              <Route path=\"/portfolio/blog\">\n                <BlogComponent />\n              </Route>\n              <Route path=\"/portfolio/books\">\n                <BooksComponent />\n              </Route>\n              <Route path=\"/portfolio/publications\">\n                <PublicationComponenet />\n              </Route>\n              <Route path=\"/portfolio/interests\">\n                <BooksComponent />\n              </Route>\n              <Route exact path=\"/portfolio\">\n                <Content />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './fonts/GreatVibes-Regular.ttf'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/acadia_1.8adaec37.jpg\";","module.exports = __webpack_public_path__ + \"static/media/resume_22.f485cd46.pdf\";","module.exports = __webpack_public_path__ + \"static/media/GreatVibes-Regular.c1c92d0c.ttf\";"],"sourceRoot":""}