{"version":3,"sources":["Images/profile_dp1.jpg","fonts/GreatVibes-Regular.ttf","Components/Content.jsx","Components/Header.jsx","Components/Footer.jsx","Components/Blog.jsx","Components/Books.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Content","props","state","isMobile","isSmallMobile","this","setState","window","innerWidth","className","src","img","style","borderRadius","width","padding","margin","color","lineHeight","Component","Header","CustomLink","to","label","match","useRouteMatch","path","exact","menuItemClass","classNames","menuActiveItemClass","Footer","height","marginRight","url","fgColor","bgColor","BlogComponent","class","BooksComponenet","App","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,yC,qLCA3CD,EAAOC,QAAU,IAA0B,gD,+JCKtBC,G,kBACjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CAAEC,UAAU,EAAOC,eAAe,GAFhC,E,iFAMfC,KAAKC,SAAS,CAAEH,SAAUI,OAAOC,WAAa,IAAKJ,cAAeG,OAAOC,WAAa,Q,+BAEhF,IAAD,EAC+BH,KAAKH,MAAjCC,EADH,EACGA,SADH,EACaC,cAClB,OACI,yBAAKK,UAAU,WACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,MACX,yBAAKC,IAAKC,IAAKC,MAAO,CAAEC,aAAc,UAE1C,kBAAC,IAAD,CAAMD,MAAO,CACTE,MAAOX,EAAW,QAAU,QAC5BY,QAASZ,EAAW,OAAS,OAC7Ba,OAAQb,EAAW,MAAQ,SAE3B,wBAAIM,UAAU,gBAAd,kBACA,wBAAIA,UAAU,gBAAd,wBACA,wBAAIA,UAAU,gBAAd,oBAGR,yBAAKA,UAAU,iBACX,kBAAC,IAAD,CAAMG,MAAO,CACTE,MAAOX,EAAW,QAAU,QAC5BY,QAASZ,EAAW,OAAS,OAC7Ba,OAAQb,EAAW,MAAQ,OAC3BU,aAAc,MACdI,MAAO,kBACPC,WAAY,MAGZ,2f,GArCaC,c,iCCGhBC,G,uLAGb,OACI,yBAAKX,UAAU,cACX,yBAAKA,UAAU,gBACf,wBAAIA,UAAU,WACV,kBAACY,EAAD,CAAYC,GAAG,aAAaC,MAAM,SAClC,kBAACF,EAAD,CAAYC,GAAG,kBAAkBC,MAAM,SACvC,kBAACF,EAAD,CAAYC,GAAG,mBAAmBC,MAAM,UACxC,kBAACF,EAAD,CAAYC,GAAG,gBAAgBC,MAAM,OACrC,kBAACF,EAAD,CAAYC,GAAG,uBAAuBC,MAAM,oB,GAX5BJ,cAmBpC,SAASE,EAAT,GAAoC,IAAdC,EAAa,EAAbA,GAAIC,EAAS,EAATA,MAClBC,EAAQC,YAAc,CACtBC,KAAMJ,EACNK,OAAO,IAGPC,EAAgBC,IAAW,WAC3BC,EAAsBD,IAAW,oBAErC,OACI,kBAAC,IAAD,CAAMpB,UAAWe,EAAQM,EAAsBF,EAAeN,GAAIA,GAAKC,G,YCjC1DQ,G,uLAEb,OACI,yBAAKtB,UAAU,kBACX,kBAAC,aAAD,CAAYG,MAAO,CAAEoB,OAAQ,GAAIlB,MAAO,GAAImB,YAAa,QAAUC,IAAI,mCAAmCC,QAAQ,UAAUC,QAAQ,YACpI,kBAAC,aAAD,CAAYxB,MAAO,CAAEoB,OAAQ,GAAIlB,MAAO,GAAImB,YAAa,QAAUC,IAAI,sCAAsCC,QAAQ,UAAUC,QAAQ,YACvI,kBAAC,aAAD,CAAYxB,MAAO,CAAEoB,OAAQ,GAAIlB,MAAO,GAAImB,YAAa,QAAUC,IAAI,8BAA8BC,QAAQ,UAAUC,QAAQ,iB,GAN3GjB,cCFfkB,E,iLAEb,OACI,yBAAKC,MAAM,mBACP,wBAAI7B,UAAU,gBAAd,wB,GAJ2BU,aCAtBoB,G,uLAEb,OACI,yBAAKD,MAAM,mBACP,wBAAI7B,UAAU,gBAAd,uCACA,4BACI,qDACA,oDACA,8CACA,gDACA,6CACA,oD,GAXyBU,cC6C9BqB,MAhCf,WACE,OACE,yBAAK/B,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,gBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiB,KAAK,mBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,iBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,oBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,wBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,cAChB,kBAAC,EAAD,WAMV,kBAAC,EAAD,Q,MC9Bce,QACW,cAA7BlC,OAAOmC,SAASC,UAEe,UAA7BpC,OAAOmC,SAASC,UAEhBpC,OAAOmC,SAASC,SAASnB,MACvB,2DCXNoB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.76cf3306.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile_dp1.ea8a267c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/GreatVibes-Regular.c1c92d0c.ttf\";","import React, { Component } from 'react'\nimport Card from 'card-vibes'\nimport img from '../Images/profile_dp1.jpg'\nimport '../css/Content.scss'\n\nexport default class Content extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { isMobile: false, isSmallMobile: false };\n    }\n\n    componentDidMount() {\n        this.setState({ isMobile: window.innerWidth < 480, isSmallMobile: window.innerWidth < 321 });\n    }\n    render() {\n        const { isMobile, isSmallMobile } = this.state;\n        return (\n            <div className=\"content\">\n                <div className=\"content-left\">\n                    <div className=\"dp\">\n                        <img src={img} style={{ borderRadius: '50%' }}></img>\n                    </div>\n                    <Card style={{\n                        width: isMobile ? '280px' : '300px',\n                        padding: isMobile ? '10px' : '30px',\n                        margin: isMobile ? '4px' : '10px'\n                    }}>\n                        <h1 className=\"stylish-name\">Pranay Yelugam</h1>\n                        <h4 className=\"stylish-name\">SDE @ Samsung, Delhi</h4>\n                        <h4 className=\"stylish-name\">IIIT Allahabad</h4>\n                    </Card>\n                </div>\n                <div className=\"content-right\">\n                    <Card style={{\n                        width: isMobile ? '280px' : '300px',\n                        padding: isMobile ? '10px' : '30px',\n                        margin: isMobile ? '4px' : '10px',\n                        borderRadius: '4px',\n                        color: 'rgb(54, 73, 98)',\n                        lineHeight: 1.6\n                    }}\n                    >\n                        <p>My passion for technology is split between web technolgies and building machine learning models.\n                        I like to participate in Kaggle challenges. I'm actively participating in kaggle challenges and you could find me there tinkering with the models. My current research includes finding solutions for the robustness\n                        in the few shot classification. My past research focussed on exploring links between people in\n                        social networks and extracting recommendations for the end user.\n                            </p>\n                    </Card>\n                </div>\n            </div>\n\n        );\n    }\n\n}\n","import React, { Component } from 'react';\nimport classNames from 'classnames'\nimport {\n    Link,\n    useRouteMatch\n} from \"react-router-dom\";\nimport '../css/Header.scss'\n\nexport default class Header extends Component {\n\n    render() {\n        return (\n            <div className=\"header-row\">\n                <div className=\"empty-space\"></div>\n                <ul className=\"nav-bar\">\n                    <CustomLink to=\"/portfolio\" label=\"Home\" />\n                    <CustomLink to=\"/portfolio/blog\" label=\"Blog\" />\n                    <CustomLink to=\"/portfolio/books\" label=\"Books\" />\n                    <CustomLink to=\"/portfolio/cv\" label=\"CV\" />\n                    <CustomLink to=\"/portfolio/interests\" label=\"Interests\" />\n                </ul>\n            </div>\n\n        )\n    }\n}\n\nfunction CustomLink({ to, label }) {\n    let match = useRouteMatch({\n        path: to,\n        exact: true\n    })\n\n    let menuItemClass = classNames('nav-mem')\n    let menuActiveItemClass = classNames('active-menu-item')\n\n    return (\n        <Link className={match ? menuActiveItemClass : menuItemClass} to={to}>{label}</Link>\n    )\n}","import React, { Component } from 'react';\nimport { SocialIcon } from 'react-social-icons';\nimport '../css/Footer.scss'\n\nexport default class Footer extends Component {\n    render() {\n        return (\n            <div className=\"content-bottom\">\n                <SocialIcon style={{ height: 40, width: 40, marginRight: '1rem' }} url=\"https://github.com/pranayyelugam\" fgColor=\"#000000\" bgColor=\"#C0C0C0\" />\n                <SocialIcon style={{ height: 40, width: 40, marginRight: '1rem' }} url=\"https://twitter.com/pranaykumar1096\" fgColor=\"#000000\" bgColor=\"#C0C0C0\" />\n                <SocialIcon style={{ height: 40, width: 40, marginRight: '1rem' }} url=\"mailto:ypranayraj@gmail.com\" fgColor=\"#000000\" bgColor=\"#C0C0C0\" />\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport default class BlogComponent extends Component {\n    render() {\n        return (\n            <div class=\"books-container\">\n                <h1 className=\"stylish-name\">Coming Soon... </h1>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport '../css/books.scss'\nexport default class BooksComponenet extends Component {\n    render() {\n        return (\n            <div class=\"books-container\">\n                <h1 className=\"stylish-name\">Some of the books I loved reading: </h1>\n                <ui>\n                    <li>To Kill a Mockingbird</li>\n                    <li>Flowers for Algernon</li>\n                    <li>The Book Thief</li>\n                    <li>Permanent Record</li>\n                    <li>The Godfather</li>\n                    <li>The Last Juror</li>\n                </ui>\n\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.scss';\nimport Content from './Components/Content';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport BlogComponent from './Components/Blog';\nimport BooksComponent from './Components/Books';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <div className=\"dynamic-area\">\n          <div className=\"site-content\">\n            <Switch>\n              <Route path=\"/portfolio/blog\">\n                <BlogComponent />\n              </Route>\n              <Route path=\"/portfolio/cv\">\n                <BlogComponent />\n              </Route>\n              <Route path=\"/portfolio/books\">\n                <BooksComponent />\n              </Route>\n              <Route path=\"/portfolio/interests\">\n                <BlogComponent />\n              </Route>\n              <Route exact path=\"/portfolio\">\n                <Content />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './fonts/GreatVibes-Regular.ttf'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}